import cv2
import time
import numpy as np
import pygame

# Initialization for writing the output video
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi', fourcc, 20.0, (640, 480))

# Reading from the webcam
cap = cv2.VideoCapture(0)

# Allow the system to sleep for 3 seconds before the webcam starts
time.sleep(3)
count = 0
background = 0

# Capture the background in range of 60
for i in range(60):
    ret, background = cap.read()
background = np.flip(background, axis=1)

# Initialize pygame.mixer and load the music
pygame.mixer.init()
pygame.mixer.music.load("C:\\Users\\91709\\Downloads\\Harry Potter Indian Theme Music.mp3")
  # Replace with your music file
pygame.mixer.music.play(-1)  # Play the music in an infinite loop

# Read every frame from the webcam, until the camera is open
while cap.isOpened():
    ret, img = cap.read()
    if not ret:
        break
    count += 1
    img = np.flip(img, axis=1)

    # Convert the color space from BGR to HSV
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    # Define the lower and upper bounds of the red color in HSV
    lower_red1 = np.array([0, 120, 50])
    upper_red1 = np.array([10, 255, 255])
    mask1 = cv2.inRange(hsv, lower_red1, upper_red1)
    lower_red2 = np.array([170, 120, 70])
    upper_red2 = np.array([180, 255, 255])

# Create masks to detect red color in both ranges

    mask2 = cv2.inRange(hsv, lower_red2, upper_red2)

# Combine the masks to get the final red color mask
    mask1 = mask1 + mask2

# Open and Dilate the mask image
    mask1 = cv2.morphologyEx(mask1, cv2.MORPH_OPEN, np.ones((3, 3), np.uint8))
    mask1= cv2.morphologyEx(mask1, cv2.MORPH_DILATE, np.ones((3, 3), np.uint8))
    ## Create an inverted mask to segment out the red color from the frame
    mask2 = cv2.bitwise_not(mask1)
 


    # ... (rest of your code for image processing)

    # Generating the final output and writing
    res1 = cv2.bitwise_and(img, img, mask=mask2)
    res2 = cv2.bitwise_and(background, background, mask=mask1)

    finalOutput = cv2.addWeighted(res1, 1, res2, 1, 0)
    out.write(finalOutput)
    cv2.imshow("magic", finalOutput)
    cv2.waitKey(1)

cap.release()
out.release()
cv2.destroyAllWindows()

# Stop the music when exiting
pygame.mixer.music.stop()
